"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const request_1 = __importDefault(require("../request"));
/*
 * baxipay
 *
 * (c) Emmanuel Ogbiyoyo <nuel@nueljoe.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
class Cable {
    constructor(apiKey) {
        this.apiKey = apiKey;
    }
    /**
    * @method fetchCableProviders - fetch all cable providers
    * @return <Promise>
    */
    fetchCableProviders() {
        const url = 'https://payments.baxipay.com.ng/api/baxipay/services/cabletv/providers';
        return new Promise((resolve, reject) => {
            return new request_1.default()
                .headers({
                "Baxi-date": new Date().toISOString(),
                "x-api-key": this.apiKey,
            })
                .acceptJson()
                .post(url, {}, 'get')
                .then(resolve)
                .catch(reject);
        });
    }
    /**
     * @method multichoiceList - Get package list on multichoice e.g dstv, got
     * @param serviceType - service type e.g dstv
     */
    multichoiceList(serviceType) {
        const payload = {
            service_type: serviceType
        };
        const url = 'https://payments.baxipay.com.ng/api/baxipay/services/multichoice/list';
        return new Promise((resolve, reject) => {
            return new request_1.default()
                .headers({
                "Baxi-date": new Date().toISOString(),
                "x-api-key": this.apiKey,
                "X-CSRF-Token": "",
            })
                .acceptJson()
                .post(url, payload)
                .then(resolve)
                .catch(reject);
        });
    }
    /**
     * @method multichoiceAddon - Retrieves Addons that can be added along side the selected subscription bundle.
     * @param serviceType - service type e.g dstv
     * @param productCode - Product Code
     */
    multichoiceAddon(serviceType, productCode) {
        const payload = {
            service_type: serviceType,
            product_code: productCode
        };
        const url = 'https://payments.baxipay.com.ng/api/baxipay/services/multichoice/addons';
        return new Promise((resolve, reject) => {
            return new request_1.default()
                .headers({
                "Baxi-date": new Date().toISOString(),
                "x-api-key": this.apiKey,
                "X-CSRF-Token": "",
            })
                .acceptJson()
                .post(url, payload)
                .then(resolve)
                .catch(reject);
        });
    }
    /**
     * @method multichoiceRequest Cable TV Subscription for Multichoice Only (DSTV, GOTV)
     * @param {String} serviceType  This is the service provider. (dstv or gotv)
     * @param {String} productCode Main code of selected bouquet
     * @param {Number} smartcardNumber Smart card account to recharge
     * @param {Number} totalAmount Sum total of product bouquet cost + Addons cost (if added)
     * @param {String} productMonthsPaidFor  Selected Number of months for Main code
     * @param {String} addonCode Addon code of selected addon bouquet
     * @param {String} addonMonthsPaidFor Selected Number of months for Addon Bouquet code
     * @param {Number} agentId This is the integrator Agent Id or Code
     * @param {String agentReference Unique reference that is generated by integrator for identifying transaction
     */
    multichoiceRequest(serviceType, productCode, smartcardNumber, totalAmount, productMonthsPaidFor, addonCode, addonMonthsPaidFor, agentId, agentReference) {
        const payload = {
            service_type: serviceType,
            product_code: productCode,
            smartcard_number: smartcardNumber,
            total_amount: totalAmount,
            product_monthsPaidFor: productMonthsPaidFor,
            addon_code: addonCode,
            addon_monthsPaidFor: addonMonthsPaidFor,
            agentReference,
            agentId
        };
        console.log(payload);
        const url = 'https://payments.baxipay.com.ng/api/baxipay/services/multichoice/request';
        return new Promise((resolve, reject) => {
            return new request_1.default()
                .headers({
                "Baxi-date": new Date().toISOString(),
                "x-api-key": this.apiKey,
                "X-CSRF-Token": "",
            })
                .acceptJson()
                .post(url, payload)
                .then(resolve)
                .catch(reject);
        });
    }
}
exports.default = Cable;
//# sourceMappingURL=cable.js.map