"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const request_1 = __importDefault(require("../request"));
/*
 * baxipay
 *
 * (c) Emmanuel Ogbiyoyo <nuel@nueljoe.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
class Epin {
    constructor(apiKey) {
        this.apiKey = apiKey;
    }
    /**
    * @method fetchEpinProviders - fetch all epin providers
    * @return <Promise>
    */
    fetchEpinProviders() {
        const url = 'https://payments.baxipay.com.ng/api/baxipay/services/epin/providers';
        return new Promise((resolve, reject) => {
            return new request_1.default()
                .headers({
                "Baxi-date": new Date().toISOString(),
                "x-api-key": this.apiKey,
            })
                .acceptJson()
                .post(url, {}, 'get')
                .then(resolve)
                .catch(reject);
        });
    }
    /**
     * @method fetchEpinBundle -Fetches Available Epin Bundles for Bundle Providers
     * @param serviceType - This is the service you are trying fetch its bundles e.g mtn, airtel, glo, 9mobile
     */
    fetchEpinBundle(serviceType) {
        const payload = {
            service_type: serviceType
        };
        const url = 'https://payments.baxipay.com.ng/api/baxipay/services/epin/bundles';
        return new Promise((resolve, reject) => {
            return new request_1.default()
                .headers({
                "Baxi-date": new Date().toISOString(),
                "x-api-key": this.apiKey,
                "X-CSRF-Token": "",
            })
                .acceptJson()
                .post(url, payload)
                .then(resolve)
                .catch(reject);
        });
    }
    /**
     * @method requestEpinBundle -Purchase available pin bundle types (9Mobile, Glo, Waec, Bulksms, Spectranet)
     * @param {String} serviceType - Provider code(9mobile, glo, bulksms, waec, spectranet)
     * @param {Number} numberOfPins  -Number of pins about to purchase
     * @param {Number} pinValue -Value of the selected pin bundle
     * @param {Number} amount - Total amount of pins x pin Value
     * @param {Number} agentId -This is the integrator Agent Id or Code
     * @param {String} agentReference -Unique reference that is generated by integrator for identifying transaction
     */
    requestEpinBundle(serviceType, numberOfPins, pinValue, amount, agentId, agentReference) {
        const payload = {
            service_type: serviceType,
            numberOfPins,
            pinValue,
            amount,
            agentId,
            agentReference
        };
        const url = 'https://payments.baxipay.com.ng/api/baxipay/services/epin/request';
        return new Promise((resolve, reject) => {
            return new request_1.default()
                .headers({
                "Baxi-date": new Date().toISOString(),
                "x-api-key": this.apiKey,
                "X-CSRF-Token": "",
            })
                .acceptJson()
                .post(url, payload)
                .then(resolve)
                .catch(reject);
        });
    }
}
exports.default = Epin;
//# sourceMappingURL=epin.js.map